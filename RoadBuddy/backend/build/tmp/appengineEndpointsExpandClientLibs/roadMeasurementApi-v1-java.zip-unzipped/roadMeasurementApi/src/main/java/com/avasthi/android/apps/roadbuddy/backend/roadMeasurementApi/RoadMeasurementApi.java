/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2015-11-16 19:10:01 UTC)
 * on 2015-12-19 at 09:24:03 UTC 
 * Modify at your own risk.
 */

package com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi;

/**
 * Service definition for RoadMeasurementApi (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link RoadMeasurementApiRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class RoadMeasurementApi extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.21.0 of the roadMeasurementApi library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://roadCompanion.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "roadMeasurementApi/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public RoadMeasurementApi(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  RoadMeasurementApi(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "addAmenity".
   *
   * This request holds the parameters needed by the roadMeasurementApi server.  After setting any
   * optional parameters, call the {@link AddAmenity#execute()} method to invoke the remote operation.
   *
   * @param timestamp
   * @param name
   * @param latitude
   * @param longitude
   * @param hasRestaurant
   * @param restaurantCreditCardAccepted
   * @param foodAmount
   * @param restaurantRating
   * @param hasRestrooms
   * @param restroomRating
   * @param hasPetroStation
   * @param fuelCreditCardAccepted
   * @param petrolStationRating
   * @param fuelAmount
   * @param fuelQuantity
   * @param city
   * @param sate
   * @param country
   * @return the request
   */
  public AddAmenity addAmenity(com.google.api.client.util.DateTime timestamp, java.lang.String name, java.lang.Double latitude, java.lang.Double longitude, java.lang.Boolean hasRestaurant, java.lang.Boolean restaurantCreditCardAccepted, java.lang.Float foodAmount, java.lang.Integer restaurantRating, java.lang.Boolean hasRestrooms, java.lang.Integer restroomRating, java.lang.Boolean hasPetroStation, java.lang.Boolean fuelCreditCardAccepted, java.lang.Integer petrolStationRating, java.lang.Float fuelAmount, java.lang.Float fuelQuantity, java.lang.String city, java.lang.String sate, java.lang.String country) throws java.io.IOException {
    AddAmenity result = new AddAmenity(timestamp, name, latitude, longitude, hasRestaurant, restaurantCreditCardAccepted, foodAmount, restaurantRating, hasRestrooms, restroomRating, hasPetroStation, fuelCreditCardAccepted, petrolStationRating, fuelAmount, fuelQuantity, city, sate, country);
    initialize(result);
    return result;
  }

  public class AddAmenity extends RoadMeasurementApiRequest<com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.Amenity> {

    private static final String REST_PATH = "addAmenity/{timestamp}/{name}/{latitude}/{longitude}/{hasRestaurant}/{restaurantCreditCardAccepted}/{foodAmount}/{restaurantRating}/{hasRestrooms}/{restroomRating}/{hasPetroStation}/{fuelCreditCardAccepted}/{petrolStationRating}/{fuelAmount}/{fuelQuantity}/{city}/{sate}/{country}";

    /**
     * Create a request for the method "addAmenity".
     *
     * This request holds the parameters needed by the the roadMeasurementApi server.  After setting
     * any optional parameters, call the {@link AddAmenity#execute()} method to invoke the remote
     * operation. <p> {@link
     * AddAmenity#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param timestamp
     * @param name
     * @param latitude
     * @param longitude
     * @param hasRestaurant
     * @param restaurantCreditCardAccepted
     * @param foodAmount
     * @param restaurantRating
     * @param hasRestrooms
     * @param restroomRating
     * @param hasPetroStation
     * @param fuelCreditCardAccepted
     * @param petrolStationRating
     * @param fuelAmount
     * @param fuelQuantity
     * @param city
     * @param sate
     * @param country
     * @since 1.13
     */
    protected AddAmenity(com.google.api.client.util.DateTime timestamp, java.lang.String name, java.lang.Double latitude, java.lang.Double longitude, java.lang.Boolean hasRestaurant, java.lang.Boolean restaurantCreditCardAccepted, java.lang.Float foodAmount, java.lang.Integer restaurantRating, java.lang.Boolean hasRestrooms, java.lang.Integer restroomRating, java.lang.Boolean hasPetroStation, java.lang.Boolean fuelCreditCardAccepted, java.lang.Integer petrolStationRating, java.lang.Float fuelAmount, java.lang.Float fuelQuantity, java.lang.String city, java.lang.String sate, java.lang.String country) {
      super(RoadMeasurementApi.this, "POST", REST_PATH, null, com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.Amenity.class);
      this.timestamp = com.google.api.client.util.Preconditions.checkNotNull(timestamp, "Required parameter timestamp must be specified.");
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
      this.latitude = com.google.api.client.util.Preconditions.checkNotNull(latitude, "Required parameter latitude must be specified.");
      this.longitude = com.google.api.client.util.Preconditions.checkNotNull(longitude, "Required parameter longitude must be specified.");
      this.hasRestaurant = com.google.api.client.util.Preconditions.checkNotNull(hasRestaurant, "Required parameter hasRestaurant must be specified.");
      this.restaurantCreditCardAccepted = com.google.api.client.util.Preconditions.checkNotNull(restaurantCreditCardAccepted, "Required parameter restaurantCreditCardAccepted must be specified.");
      this.foodAmount = com.google.api.client.util.Preconditions.checkNotNull(foodAmount, "Required parameter foodAmount must be specified.");
      this.restaurantRating = com.google.api.client.util.Preconditions.checkNotNull(restaurantRating, "Required parameter restaurantRating must be specified.");
      this.hasRestrooms = com.google.api.client.util.Preconditions.checkNotNull(hasRestrooms, "Required parameter hasRestrooms must be specified.");
      this.restroomRating = com.google.api.client.util.Preconditions.checkNotNull(restroomRating, "Required parameter restroomRating must be specified.");
      this.hasPetroStation = com.google.api.client.util.Preconditions.checkNotNull(hasPetroStation, "Required parameter hasPetroStation must be specified.");
      this.fuelCreditCardAccepted = com.google.api.client.util.Preconditions.checkNotNull(fuelCreditCardAccepted, "Required parameter fuelCreditCardAccepted must be specified.");
      this.petrolStationRating = com.google.api.client.util.Preconditions.checkNotNull(petrolStationRating, "Required parameter petrolStationRating must be specified.");
      this.fuelAmount = com.google.api.client.util.Preconditions.checkNotNull(fuelAmount, "Required parameter fuelAmount must be specified.");
      this.fuelQuantity = com.google.api.client.util.Preconditions.checkNotNull(fuelQuantity, "Required parameter fuelQuantity must be specified.");
      this.city = com.google.api.client.util.Preconditions.checkNotNull(city, "Required parameter city must be specified.");
      this.sate = com.google.api.client.util.Preconditions.checkNotNull(sate, "Required parameter sate must be specified.");
      this.country = com.google.api.client.util.Preconditions.checkNotNull(country, "Required parameter country must be specified.");
    }

    @Override
    public AddAmenity setAlt(java.lang.String alt) {
      return (AddAmenity) super.setAlt(alt);
    }

    @Override
    public AddAmenity setFields(java.lang.String fields) {
      return (AddAmenity) super.setFields(fields);
    }

    @Override
    public AddAmenity setKey(java.lang.String key) {
      return (AddAmenity) super.setKey(key);
    }

    @Override
    public AddAmenity setOauthToken(java.lang.String oauthToken) {
      return (AddAmenity) super.setOauthToken(oauthToken);
    }

    @Override
    public AddAmenity setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddAmenity) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddAmenity setQuotaUser(java.lang.String quotaUser) {
      return (AddAmenity) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddAmenity setUserIp(java.lang.String userIp) {
      return (AddAmenity) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private com.google.api.client.util.DateTime timestamp;

    /**

     */
    public com.google.api.client.util.DateTime getTimestamp() {
      return timestamp;
    }

    public AddAmenity setTimestamp(com.google.api.client.util.DateTime timestamp) {
      this.timestamp = timestamp;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public AddAmenity setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double latitude;

    /**

     */
    public java.lang.Double getLatitude() {
      return latitude;
    }

    public AddAmenity setLatitude(java.lang.Double latitude) {
      this.latitude = latitude;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double longitude;

    /**

     */
    public java.lang.Double getLongitude() {
      return longitude;
    }

    public AddAmenity setLongitude(java.lang.Double longitude) {
      this.longitude = longitude;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Boolean hasRestaurant;

    /**

     */
    public java.lang.Boolean getHasRestaurant() {
      return hasRestaurant;
    }

    public AddAmenity setHasRestaurant(java.lang.Boolean hasRestaurant) {
      this.hasRestaurant = hasRestaurant;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Boolean restaurantCreditCardAccepted;

    /**

     */
    public java.lang.Boolean getRestaurantCreditCardAccepted() {
      return restaurantCreditCardAccepted;
    }

    public AddAmenity setRestaurantCreditCardAccepted(java.lang.Boolean restaurantCreditCardAccepted) {
      this.restaurantCreditCardAccepted = restaurantCreditCardAccepted;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Float foodAmount;

    /**

     */
    public java.lang.Float getFoodAmount() {
      return foodAmount;
    }

    public AddAmenity setFoodAmount(java.lang.Float foodAmount) {
      this.foodAmount = foodAmount;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer restaurantRating;

    /**

     */
    public java.lang.Integer getRestaurantRating() {
      return restaurantRating;
    }

    public AddAmenity setRestaurantRating(java.lang.Integer restaurantRating) {
      this.restaurantRating = restaurantRating;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Boolean hasRestrooms;

    /**

     */
    public java.lang.Boolean getHasRestrooms() {
      return hasRestrooms;
    }

    public AddAmenity setHasRestrooms(java.lang.Boolean hasRestrooms) {
      this.hasRestrooms = hasRestrooms;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer restroomRating;

    /**

     */
    public java.lang.Integer getRestroomRating() {
      return restroomRating;
    }

    public AddAmenity setRestroomRating(java.lang.Integer restroomRating) {
      this.restroomRating = restroomRating;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Boolean hasPetroStation;

    /**

     */
    public java.lang.Boolean getHasPetroStation() {
      return hasPetroStation;
    }

    public AddAmenity setHasPetroStation(java.lang.Boolean hasPetroStation) {
      this.hasPetroStation = hasPetroStation;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Boolean fuelCreditCardAccepted;

    /**

     */
    public java.lang.Boolean getFuelCreditCardAccepted() {
      return fuelCreditCardAccepted;
    }

    public AddAmenity setFuelCreditCardAccepted(java.lang.Boolean fuelCreditCardAccepted) {
      this.fuelCreditCardAccepted = fuelCreditCardAccepted;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer petrolStationRating;

    /**

     */
    public java.lang.Integer getPetrolStationRating() {
      return petrolStationRating;
    }

    public AddAmenity setPetrolStationRating(java.lang.Integer petrolStationRating) {
      this.petrolStationRating = petrolStationRating;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Float fuelAmount;

    /**

     */
    public java.lang.Float getFuelAmount() {
      return fuelAmount;
    }

    public AddAmenity setFuelAmount(java.lang.Float fuelAmount) {
      this.fuelAmount = fuelAmount;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Float fuelQuantity;

    /**

     */
    public java.lang.Float getFuelQuantity() {
      return fuelQuantity;
    }

    public AddAmenity setFuelQuantity(java.lang.Float fuelQuantity) {
      this.fuelQuantity = fuelQuantity;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String city;

    /**

     */
    public java.lang.String getCity() {
      return city;
    }

    public AddAmenity setCity(java.lang.String city) {
      this.city = city;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String sate;

    /**

     */
    public java.lang.String getSate() {
      return sate;
    }

    public AddAmenity setSate(java.lang.String sate) {
      this.sate = sate;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String country;

    /**

     */
    public java.lang.String getCountry() {
      return country;
    }

    public AddAmenity setCountry(java.lang.String country) {
      this.country = country;
      return this;
    }

    @Override
    public AddAmenity set(String parameterName, Object value) {
      return (AddAmenity) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addAmenityStop".
   *
   * This request holds the parameters needed by the roadMeasurementApi server.  After setting any
   * optional parameters, call the {@link AddAmenityStop#execute()} method to invoke the remote
   * operation.
   *
   * @param establishmentId
   * @param timestamp
   * @param restaurantRating
   * @param foodAmount
   * @param restroomRating
   * @param petrolStationRating
   * @param fuelAmount
   * @param fuelQuantity
   * @return the request
   */
  public AddAmenityStop addAmenityStop(java.lang.Long establishmentId, com.google.api.client.util.DateTime timestamp, java.lang.Integer restaurantRating, java.lang.Float foodAmount, java.lang.Integer restroomRating, java.lang.Integer petrolStationRating, java.lang.Float fuelAmount, java.lang.Float fuelQuantity) throws java.io.IOException {
    AddAmenityStop result = new AddAmenityStop(establishmentId, timestamp, restaurantRating, foodAmount, restroomRating, petrolStationRating, fuelAmount, fuelQuantity);
    initialize(result);
    return result;
  }

  public class AddAmenityStop extends RoadMeasurementApiRequest<com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.AmenityStop> {

    private static final String REST_PATH = "addAmenityVisit/{establishmentId}/{timestamp}/{restaurantRating}/{foodAmount}/{restroomRating}/{petrolStationRating}/{fuelAmount}/{fuelQuantity}";

    /**
     * Create a request for the method "addAmenityStop".
     *
     * This request holds the parameters needed by the the roadMeasurementApi server.  After setting
     * any optional parameters, call the {@link AddAmenityStop#execute()} method to invoke the remote
     * operation. <p> {@link AddAmenityStop#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param establishmentId
     * @param timestamp
     * @param restaurantRating
     * @param foodAmount
     * @param restroomRating
     * @param petrolStationRating
     * @param fuelAmount
     * @param fuelQuantity
     * @since 1.13
     */
    protected AddAmenityStop(java.lang.Long establishmentId, com.google.api.client.util.DateTime timestamp, java.lang.Integer restaurantRating, java.lang.Float foodAmount, java.lang.Integer restroomRating, java.lang.Integer petrolStationRating, java.lang.Float fuelAmount, java.lang.Float fuelQuantity) {
      super(RoadMeasurementApi.this, "POST", REST_PATH, null, com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.AmenityStop.class);
      this.establishmentId = com.google.api.client.util.Preconditions.checkNotNull(establishmentId, "Required parameter establishmentId must be specified.");
      this.timestamp = com.google.api.client.util.Preconditions.checkNotNull(timestamp, "Required parameter timestamp must be specified.");
      this.restaurantRating = com.google.api.client.util.Preconditions.checkNotNull(restaurantRating, "Required parameter restaurantRating must be specified.");
      this.foodAmount = com.google.api.client.util.Preconditions.checkNotNull(foodAmount, "Required parameter foodAmount must be specified.");
      this.restroomRating = com.google.api.client.util.Preconditions.checkNotNull(restroomRating, "Required parameter restroomRating must be specified.");
      this.petrolStationRating = com.google.api.client.util.Preconditions.checkNotNull(petrolStationRating, "Required parameter petrolStationRating must be specified.");
      this.fuelAmount = com.google.api.client.util.Preconditions.checkNotNull(fuelAmount, "Required parameter fuelAmount must be specified.");
      this.fuelQuantity = com.google.api.client.util.Preconditions.checkNotNull(fuelQuantity, "Required parameter fuelQuantity must be specified.");
    }

    @Override
    public AddAmenityStop setAlt(java.lang.String alt) {
      return (AddAmenityStop) super.setAlt(alt);
    }

    @Override
    public AddAmenityStop setFields(java.lang.String fields) {
      return (AddAmenityStop) super.setFields(fields);
    }

    @Override
    public AddAmenityStop setKey(java.lang.String key) {
      return (AddAmenityStop) super.setKey(key);
    }

    @Override
    public AddAmenityStop setOauthToken(java.lang.String oauthToken) {
      return (AddAmenityStop) super.setOauthToken(oauthToken);
    }

    @Override
    public AddAmenityStop setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddAmenityStop) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddAmenityStop setQuotaUser(java.lang.String quotaUser) {
      return (AddAmenityStop) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddAmenityStop setUserIp(java.lang.String userIp) {
      return (AddAmenityStop) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long establishmentId;

    /**

     */
    public java.lang.Long getEstablishmentId() {
      return establishmentId;
    }

    public AddAmenityStop setEstablishmentId(java.lang.Long establishmentId) {
      this.establishmentId = establishmentId;
      return this;
    }

    @com.google.api.client.util.Key
    private com.google.api.client.util.DateTime timestamp;

    /**

     */
    public com.google.api.client.util.DateTime getTimestamp() {
      return timestamp;
    }

    public AddAmenityStop setTimestamp(com.google.api.client.util.DateTime timestamp) {
      this.timestamp = timestamp;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer restaurantRating;

    /**

     */
    public java.lang.Integer getRestaurantRating() {
      return restaurantRating;
    }

    public AddAmenityStop setRestaurantRating(java.lang.Integer restaurantRating) {
      this.restaurantRating = restaurantRating;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Float foodAmount;

    /**

     */
    public java.lang.Float getFoodAmount() {
      return foodAmount;
    }

    public AddAmenityStop setFoodAmount(java.lang.Float foodAmount) {
      this.foodAmount = foodAmount;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer restroomRating;

    /**

     */
    public java.lang.Integer getRestroomRating() {
      return restroomRating;
    }

    public AddAmenityStop setRestroomRating(java.lang.Integer restroomRating) {
      this.restroomRating = restroomRating;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer petrolStationRating;

    /**

     */
    public java.lang.Integer getPetrolStationRating() {
      return petrolStationRating;
    }

    public AddAmenityStop setPetrolStationRating(java.lang.Integer petrolStationRating) {
      this.petrolStationRating = petrolStationRating;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Float fuelAmount;

    /**

     */
    public java.lang.Float getFuelAmount() {
      return fuelAmount;
    }

    public AddAmenityStop setFuelAmount(java.lang.Float fuelAmount) {
      this.fuelAmount = fuelAmount;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Float fuelQuantity;

    /**

     */
    public java.lang.Float getFuelQuantity() {
      return fuelQuantity;
    }

    public AddAmenityStop setFuelQuantity(java.lang.Float fuelQuantity) {
      this.fuelQuantity = fuelQuantity;
      return this;
    }

    @Override
    public AddAmenityStop set(String parameterName, Object value) {
      return (AddAmenityStop) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addCheckpost".
   *
   * This request holds the parameters needed by the roadMeasurementApi server.  After setting any
   * optional parameters, call the {@link AddCheckpost#execute()} method to invoke the remote
   * operation.
   *
   * @param timestamp
   * @param latitude
   * @param longitude
   * @param city
   * @param sate
   * @param country
   * @param speedCameras
   * @param fineAmount
   * @return the request
   */
  public AddCheckpost addCheckpost(com.google.api.client.util.DateTime timestamp, java.lang.Double latitude, java.lang.Double longitude, java.lang.String city, java.lang.String sate, java.lang.String country, java.lang.Boolean speedCameras, java.lang.Float fineAmount) throws java.io.IOException {
    AddCheckpost result = new AddCheckpost(timestamp, latitude, longitude, city, sate, country, speedCameras, fineAmount);
    initialize(result);
    return result;
  }

  public class AddCheckpost extends RoadMeasurementApiRequest<com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.Checkpost> {

    private static final String REST_PATH = "addCheckpost/{timestamp}/{latitude}/{longitude}/{city}/{sate}/{country}/{speedCameras}/{fineAmount}";

    /**
     * Create a request for the method "addCheckpost".
     *
     * This request holds the parameters needed by the the roadMeasurementApi server.  After setting
     * any optional parameters, call the {@link AddCheckpost#execute()} method to invoke the remote
     * operation. <p> {@link
     * AddCheckpost#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param timestamp
     * @param latitude
     * @param longitude
     * @param city
     * @param sate
     * @param country
     * @param speedCameras
     * @param fineAmount
     * @since 1.13
     */
    protected AddCheckpost(com.google.api.client.util.DateTime timestamp, java.lang.Double latitude, java.lang.Double longitude, java.lang.String city, java.lang.String sate, java.lang.String country, java.lang.Boolean speedCameras, java.lang.Float fineAmount) {
      super(RoadMeasurementApi.this, "POST", REST_PATH, null, com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.Checkpost.class);
      this.timestamp = com.google.api.client.util.Preconditions.checkNotNull(timestamp, "Required parameter timestamp must be specified.");
      this.latitude = com.google.api.client.util.Preconditions.checkNotNull(latitude, "Required parameter latitude must be specified.");
      this.longitude = com.google.api.client.util.Preconditions.checkNotNull(longitude, "Required parameter longitude must be specified.");
      this.city = com.google.api.client.util.Preconditions.checkNotNull(city, "Required parameter city must be specified.");
      this.sate = com.google.api.client.util.Preconditions.checkNotNull(sate, "Required parameter sate must be specified.");
      this.country = com.google.api.client.util.Preconditions.checkNotNull(country, "Required parameter country must be specified.");
      this.speedCameras = com.google.api.client.util.Preconditions.checkNotNull(speedCameras, "Required parameter speedCameras must be specified.");
      this.fineAmount = com.google.api.client.util.Preconditions.checkNotNull(fineAmount, "Required parameter fineAmount must be specified.");
    }

    @Override
    public AddCheckpost setAlt(java.lang.String alt) {
      return (AddCheckpost) super.setAlt(alt);
    }

    @Override
    public AddCheckpost setFields(java.lang.String fields) {
      return (AddCheckpost) super.setFields(fields);
    }

    @Override
    public AddCheckpost setKey(java.lang.String key) {
      return (AddCheckpost) super.setKey(key);
    }

    @Override
    public AddCheckpost setOauthToken(java.lang.String oauthToken) {
      return (AddCheckpost) super.setOauthToken(oauthToken);
    }

    @Override
    public AddCheckpost setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddCheckpost) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddCheckpost setQuotaUser(java.lang.String quotaUser) {
      return (AddCheckpost) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddCheckpost setUserIp(java.lang.String userIp) {
      return (AddCheckpost) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private com.google.api.client.util.DateTime timestamp;

    /**

     */
    public com.google.api.client.util.DateTime getTimestamp() {
      return timestamp;
    }

    public AddCheckpost setTimestamp(com.google.api.client.util.DateTime timestamp) {
      this.timestamp = timestamp;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double latitude;

    /**

     */
    public java.lang.Double getLatitude() {
      return latitude;
    }

    public AddCheckpost setLatitude(java.lang.Double latitude) {
      this.latitude = latitude;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double longitude;

    /**

     */
    public java.lang.Double getLongitude() {
      return longitude;
    }

    public AddCheckpost setLongitude(java.lang.Double longitude) {
      this.longitude = longitude;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String city;

    /**

     */
    public java.lang.String getCity() {
      return city;
    }

    public AddCheckpost setCity(java.lang.String city) {
      this.city = city;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String sate;

    /**

     */
    public java.lang.String getSate() {
      return sate;
    }

    public AddCheckpost setSate(java.lang.String sate) {
      this.sate = sate;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String country;

    /**

     */
    public java.lang.String getCountry() {
      return country;
    }

    public AddCheckpost setCountry(java.lang.String country) {
      this.country = country;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Boolean speedCameras;

    /**

     */
    public java.lang.Boolean getSpeedCameras() {
      return speedCameras;
    }

    public AddCheckpost setSpeedCameras(java.lang.Boolean speedCameras) {
      this.speedCameras = speedCameras;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Float fineAmount;

    /**

     */
    public java.lang.Float getFineAmount() {
      return fineAmount;
    }

    public AddCheckpost setFineAmount(java.lang.Float fineAmount) {
      this.fineAmount = fineAmount;
      return this;
    }

    @Override
    public AddCheckpost set(String parameterName, Object value) {
      return (AddCheckpost) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addCheckpostStop".
   *
   * This request holds the parameters needed by the roadMeasurementApi server.  After setting any
   * optional parameters, call the {@link AddCheckpostStop#execute()} method to invoke the remote
   * operation.
   *
   * @param establishmentId
   * @param timestamp
   * @param speedCameras
   * @param fineAmount
   * @return the request
   */
  public AddCheckpostStop addCheckpostStop(java.lang.Long establishmentId, com.google.api.client.util.DateTime timestamp, java.lang.Boolean speedCameras, java.lang.Float fineAmount) throws java.io.IOException {
    AddCheckpostStop result = new AddCheckpostStop(establishmentId, timestamp, speedCameras, fineAmount);
    initialize(result);
    return result;
  }

  public class AddCheckpostStop extends RoadMeasurementApiRequest<com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.CheckpostStop> {

    private static final String REST_PATH = "addCheckpostStop/{establishmentId}/{timestamp}/{speedCameras}/{fineAmount}";

    /**
     * Create a request for the method "addCheckpostStop".
     *
     * This request holds the parameters needed by the the roadMeasurementApi server.  After setting
     * any optional parameters, call the {@link AddCheckpostStop#execute()} method to invoke the
     * remote operation. <p> {@link AddCheckpostStop#initialize(com.google.api.client.googleapis.servi
     * ces.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param establishmentId
     * @param timestamp
     * @param speedCameras
     * @param fineAmount
     * @since 1.13
     */
    protected AddCheckpostStop(java.lang.Long establishmentId, com.google.api.client.util.DateTime timestamp, java.lang.Boolean speedCameras, java.lang.Float fineAmount) {
      super(RoadMeasurementApi.this, "POST", REST_PATH, null, com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.CheckpostStop.class);
      this.establishmentId = com.google.api.client.util.Preconditions.checkNotNull(establishmentId, "Required parameter establishmentId must be specified.");
      this.timestamp = com.google.api.client.util.Preconditions.checkNotNull(timestamp, "Required parameter timestamp must be specified.");
      this.speedCameras = com.google.api.client.util.Preconditions.checkNotNull(speedCameras, "Required parameter speedCameras must be specified.");
      this.fineAmount = com.google.api.client.util.Preconditions.checkNotNull(fineAmount, "Required parameter fineAmount must be specified.");
    }

    @Override
    public AddCheckpostStop setAlt(java.lang.String alt) {
      return (AddCheckpostStop) super.setAlt(alt);
    }

    @Override
    public AddCheckpostStop setFields(java.lang.String fields) {
      return (AddCheckpostStop) super.setFields(fields);
    }

    @Override
    public AddCheckpostStop setKey(java.lang.String key) {
      return (AddCheckpostStop) super.setKey(key);
    }

    @Override
    public AddCheckpostStop setOauthToken(java.lang.String oauthToken) {
      return (AddCheckpostStop) super.setOauthToken(oauthToken);
    }

    @Override
    public AddCheckpostStop setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddCheckpostStop) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddCheckpostStop setQuotaUser(java.lang.String quotaUser) {
      return (AddCheckpostStop) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddCheckpostStop setUserIp(java.lang.String userIp) {
      return (AddCheckpostStop) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long establishmentId;

    /**

     */
    public java.lang.Long getEstablishmentId() {
      return establishmentId;
    }

    public AddCheckpostStop setEstablishmentId(java.lang.Long establishmentId) {
      this.establishmentId = establishmentId;
      return this;
    }

    @com.google.api.client.util.Key
    private com.google.api.client.util.DateTime timestamp;

    /**

     */
    public com.google.api.client.util.DateTime getTimestamp() {
      return timestamp;
    }

    public AddCheckpostStop setTimestamp(com.google.api.client.util.DateTime timestamp) {
      this.timestamp = timestamp;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Boolean speedCameras;

    /**

     */
    public java.lang.Boolean getSpeedCameras() {
      return speedCameras;
    }

    public AddCheckpostStop setSpeedCameras(java.lang.Boolean speedCameras) {
      this.speedCameras = speedCameras;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Float fineAmount;

    /**

     */
    public java.lang.Float getFineAmount() {
      return fineAmount;
    }

    public AddCheckpostStop setFineAmount(java.lang.Float fineAmount) {
      this.fineAmount = fineAmount;
      return this;
    }

    @Override
    public AddCheckpostStop set(String parameterName, Object value) {
      return (AddCheckpostStop) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addSensorData".
   *
   * This request holds the parameters needed by the roadMeasurementApi server.  After setting any
   * optional parameters, call the {@link AddSensorData#execute()} method to invoke the remote
   * operation.
   *
   * @param timestamp
   * @param driveId
   * @param verticalAccelerometerMean
   * @param verticalAccelerometerSD
   * @param accuracy
   * @param bearing
   * @param latitude
   * @param longitude
   * @param speed
   * @return the request
   */
  public AddSensorData addSensorData(com.google.api.client.util.DateTime timestamp, java.lang.Long driveId, java.lang.Float verticalAccelerometerMean, java.lang.Float verticalAccelerometerSD, java.lang.Float accuracy, java.lang.Float bearing, java.lang.Double latitude, java.lang.Double longitude, java.lang.Float speed) throws java.io.IOException {
    AddSensorData result = new AddSensorData(timestamp, driveId, verticalAccelerometerMean, verticalAccelerometerSD, accuracy, bearing, latitude, longitude, speed);
    initialize(result);
    return result;
  }

  public class AddSensorData extends RoadMeasurementApiRequest<com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.SensorData> {

    private static final String REST_PATH = "addSensorData/{timestamp}/{driveId}/{verticalAccelerometerMean}/{verticalAccelerometerSD}/{accuracy}/{bearing}/{latitude}/{longitude}/{speed}";

    /**
     * Create a request for the method "addSensorData".
     *
     * This request holds the parameters needed by the the roadMeasurementApi server.  After setting
     * any optional parameters, call the {@link AddSensorData#execute()} method to invoke the remote
     * operation. <p> {@link AddSensorData#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param timestamp
     * @param driveId
     * @param verticalAccelerometerMean
     * @param verticalAccelerometerSD
     * @param accuracy
     * @param bearing
     * @param latitude
     * @param longitude
     * @param speed
     * @since 1.13
     */
    protected AddSensorData(com.google.api.client.util.DateTime timestamp, java.lang.Long driveId, java.lang.Float verticalAccelerometerMean, java.lang.Float verticalAccelerometerSD, java.lang.Float accuracy, java.lang.Float bearing, java.lang.Double latitude, java.lang.Double longitude, java.lang.Float speed) {
      super(RoadMeasurementApi.this, "POST", REST_PATH, null, com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.SensorData.class);
      this.timestamp = com.google.api.client.util.Preconditions.checkNotNull(timestamp, "Required parameter timestamp must be specified.");
      this.driveId = com.google.api.client.util.Preconditions.checkNotNull(driveId, "Required parameter driveId must be specified.");
      this.verticalAccelerometerMean = com.google.api.client.util.Preconditions.checkNotNull(verticalAccelerometerMean, "Required parameter verticalAccelerometerMean must be specified.");
      this.verticalAccelerometerSD = com.google.api.client.util.Preconditions.checkNotNull(verticalAccelerometerSD, "Required parameter verticalAccelerometerSD must be specified.");
      this.accuracy = com.google.api.client.util.Preconditions.checkNotNull(accuracy, "Required parameter accuracy must be specified.");
      this.bearing = com.google.api.client.util.Preconditions.checkNotNull(bearing, "Required parameter bearing must be specified.");
      this.latitude = com.google.api.client.util.Preconditions.checkNotNull(latitude, "Required parameter latitude must be specified.");
      this.longitude = com.google.api.client.util.Preconditions.checkNotNull(longitude, "Required parameter longitude must be specified.");
      this.speed = com.google.api.client.util.Preconditions.checkNotNull(speed, "Required parameter speed must be specified.");
    }

    @Override
    public AddSensorData setAlt(java.lang.String alt) {
      return (AddSensorData) super.setAlt(alt);
    }

    @Override
    public AddSensorData setFields(java.lang.String fields) {
      return (AddSensorData) super.setFields(fields);
    }

    @Override
    public AddSensorData setKey(java.lang.String key) {
      return (AddSensorData) super.setKey(key);
    }

    @Override
    public AddSensorData setOauthToken(java.lang.String oauthToken) {
      return (AddSensorData) super.setOauthToken(oauthToken);
    }

    @Override
    public AddSensorData setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddSensorData) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddSensorData setQuotaUser(java.lang.String quotaUser) {
      return (AddSensorData) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddSensorData setUserIp(java.lang.String userIp) {
      return (AddSensorData) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private com.google.api.client.util.DateTime timestamp;

    /**

     */
    public com.google.api.client.util.DateTime getTimestamp() {
      return timestamp;
    }

    public AddSensorData setTimestamp(com.google.api.client.util.DateTime timestamp) {
      this.timestamp = timestamp;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long driveId;

    /**

     */
    public java.lang.Long getDriveId() {
      return driveId;
    }

    public AddSensorData setDriveId(java.lang.Long driveId) {
      this.driveId = driveId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Float verticalAccelerometerMean;

    /**

     */
    public java.lang.Float getVerticalAccelerometerMean() {
      return verticalAccelerometerMean;
    }

    public AddSensorData setVerticalAccelerometerMean(java.lang.Float verticalAccelerometerMean) {
      this.verticalAccelerometerMean = verticalAccelerometerMean;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Float verticalAccelerometerSD;

    /**

     */
    public java.lang.Float getVerticalAccelerometerSD() {
      return verticalAccelerometerSD;
    }

    public AddSensorData setVerticalAccelerometerSD(java.lang.Float verticalAccelerometerSD) {
      this.verticalAccelerometerSD = verticalAccelerometerSD;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Float accuracy;

    /**

     */
    public java.lang.Float getAccuracy() {
      return accuracy;
    }

    public AddSensorData setAccuracy(java.lang.Float accuracy) {
      this.accuracy = accuracy;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Float bearing;

    /**

     */
    public java.lang.Float getBearing() {
      return bearing;
    }

    public AddSensorData setBearing(java.lang.Float bearing) {
      this.bearing = bearing;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double latitude;

    /**

     */
    public java.lang.Double getLatitude() {
      return latitude;
    }

    public AddSensorData setLatitude(java.lang.Double latitude) {
      this.latitude = latitude;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double longitude;

    /**

     */
    public java.lang.Double getLongitude() {
      return longitude;
    }

    public AddSensorData setLongitude(java.lang.Double longitude) {
      this.longitude = longitude;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Float speed;

    /**

     */
    public java.lang.Float getSpeed() {
      return speed;
    }

    public AddSensorData setSpeed(java.lang.Float speed) {
      this.speed = speed;
      return this;
    }

    @Override
    public AddSensorData set(String parameterName, Object value) {
      return (AddSensorData) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addToll".
   *
   * This request holds the parameters needed by the roadMeasurementApi server.  After setting any
   * optional parameters, call the {@link AddToll#execute()} method to invoke the remote operation.
   *
   * @param timestamp
   * @param fasTagLane
   * @param latitude
   * @param longitude
   * @param amount
   * @param city
   * @param sate
   * @param country
   * @return the request
   */
  public AddToll addToll(com.google.api.client.util.DateTime timestamp, java.lang.Boolean fasTagLane, java.lang.Double latitude, java.lang.Double longitude, java.lang.Float amount, java.lang.String city, java.lang.String sate, java.lang.String country) throws java.io.IOException {
    AddToll result = new AddToll(timestamp, fasTagLane, latitude, longitude, amount, city, sate, country);
    initialize(result);
    return result;
  }

  public class AddToll extends RoadMeasurementApiRequest<com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.Toll> {

    private static final String REST_PATH = "addToll/{timestamp}/{fasTagLane}/{latitude}/{longitude}/{amount}/{city}/{sate}/{country}";

    /**
     * Create a request for the method "addToll".
     *
     * This request holds the parameters needed by the the roadMeasurementApi server.  After setting
     * any optional parameters, call the {@link AddToll#execute()} method to invoke the remote
     * operation. <p> {@link
     * AddToll#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param timestamp
     * @param fasTagLane
     * @param latitude
     * @param longitude
     * @param amount
     * @param city
     * @param sate
     * @param country
     * @since 1.13
     */
    protected AddToll(com.google.api.client.util.DateTime timestamp, java.lang.Boolean fasTagLane, java.lang.Double latitude, java.lang.Double longitude, java.lang.Float amount, java.lang.String city, java.lang.String sate, java.lang.String country) {
      super(RoadMeasurementApi.this, "POST", REST_PATH, null, com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.Toll.class);
      this.timestamp = com.google.api.client.util.Preconditions.checkNotNull(timestamp, "Required parameter timestamp must be specified.");
      this.fasTagLane = com.google.api.client.util.Preconditions.checkNotNull(fasTagLane, "Required parameter fasTagLane must be specified.");
      this.latitude = com.google.api.client.util.Preconditions.checkNotNull(latitude, "Required parameter latitude must be specified.");
      this.longitude = com.google.api.client.util.Preconditions.checkNotNull(longitude, "Required parameter longitude must be specified.");
      this.amount = com.google.api.client.util.Preconditions.checkNotNull(amount, "Required parameter amount must be specified.");
      this.city = com.google.api.client.util.Preconditions.checkNotNull(city, "Required parameter city must be specified.");
      this.sate = com.google.api.client.util.Preconditions.checkNotNull(sate, "Required parameter sate must be specified.");
      this.country = com.google.api.client.util.Preconditions.checkNotNull(country, "Required parameter country must be specified.");
    }

    @Override
    public AddToll setAlt(java.lang.String alt) {
      return (AddToll) super.setAlt(alt);
    }

    @Override
    public AddToll setFields(java.lang.String fields) {
      return (AddToll) super.setFields(fields);
    }

    @Override
    public AddToll setKey(java.lang.String key) {
      return (AddToll) super.setKey(key);
    }

    @Override
    public AddToll setOauthToken(java.lang.String oauthToken) {
      return (AddToll) super.setOauthToken(oauthToken);
    }

    @Override
    public AddToll setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddToll) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddToll setQuotaUser(java.lang.String quotaUser) {
      return (AddToll) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddToll setUserIp(java.lang.String userIp) {
      return (AddToll) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private com.google.api.client.util.DateTime timestamp;

    /**

     */
    public com.google.api.client.util.DateTime getTimestamp() {
      return timestamp;
    }

    public AddToll setTimestamp(com.google.api.client.util.DateTime timestamp) {
      this.timestamp = timestamp;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Boolean fasTagLane;

    /**

     */
    public java.lang.Boolean getFasTagLane() {
      return fasTagLane;
    }

    public AddToll setFasTagLane(java.lang.Boolean fasTagLane) {
      this.fasTagLane = fasTagLane;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double latitude;

    /**

     */
    public java.lang.Double getLatitude() {
      return latitude;
    }

    public AddToll setLatitude(java.lang.Double latitude) {
      this.latitude = latitude;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double longitude;

    /**

     */
    public java.lang.Double getLongitude() {
      return longitude;
    }

    public AddToll setLongitude(java.lang.Double longitude) {
      this.longitude = longitude;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Float amount;

    /**

     */
    public java.lang.Float getAmount() {
      return amount;
    }

    public AddToll setAmount(java.lang.Float amount) {
      this.amount = amount;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String city;

    /**

     */
    public java.lang.String getCity() {
      return city;
    }

    public AddToll setCity(java.lang.String city) {
      this.city = city;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String sate;

    /**

     */
    public java.lang.String getSate() {
      return sate;
    }

    public AddToll setSate(java.lang.String sate) {
      this.sate = sate;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String country;

    /**

     */
    public java.lang.String getCountry() {
      return country;
    }

    public AddToll setCountry(java.lang.String country) {
      this.country = country;
      return this;
    }

    @Override
    public AddToll set(String parameterName, Object value) {
      return (AddToll) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addTollStop".
   *
   * This request holds the parameters needed by the roadMeasurementApi server.  After setting any
   * optional parameters, call the {@link AddTollStop#execute()} method to invoke the remote
   * operation.
   *
   * @param establishmentId
   * @param timestamp
   * @param fasTagLane
   * @param amount
   * @return the request
   */
  public AddTollStop addTollStop(java.lang.Long establishmentId, com.google.api.client.util.DateTime timestamp, java.lang.Boolean fasTagLane, java.lang.Float amount) throws java.io.IOException {
    AddTollStop result = new AddTollStop(establishmentId, timestamp, fasTagLane, amount);
    initialize(result);
    return result;
  }

  public class AddTollStop extends RoadMeasurementApiRequest<com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.Toll> {

    private static final String REST_PATH = "addTollStop/{establishmentId}/{timestamp}/{fasTagLane}/{amount}";

    /**
     * Create a request for the method "addTollStop".
     *
     * This request holds the parameters needed by the the roadMeasurementApi server.  After setting
     * any optional parameters, call the {@link AddTollStop#execute()} method to invoke the remote
     * operation. <p> {@link
     * AddTollStop#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param establishmentId
     * @param timestamp
     * @param fasTagLane
     * @param amount
     * @since 1.13
     */
    protected AddTollStop(java.lang.Long establishmentId, com.google.api.client.util.DateTime timestamp, java.lang.Boolean fasTagLane, java.lang.Float amount) {
      super(RoadMeasurementApi.this, "POST", REST_PATH, null, com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.Toll.class);
      this.establishmentId = com.google.api.client.util.Preconditions.checkNotNull(establishmentId, "Required parameter establishmentId must be specified.");
      this.timestamp = com.google.api.client.util.Preconditions.checkNotNull(timestamp, "Required parameter timestamp must be specified.");
      this.fasTagLane = com.google.api.client.util.Preconditions.checkNotNull(fasTagLane, "Required parameter fasTagLane must be specified.");
      this.amount = com.google.api.client.util.Preconditions.checkNotNull(amount, "Required parameter amount must be specified.");
    }

    @Override
    public AddTollStop setAlt(java.lang.String alt) {
      return (AddTollStop) super.setAlt(alt);
    }

    @Override
    public AddTollStop setFields(java.lang.String fields) {
      return (AddTollStop) super.setFields(fields);
    }

    @Override
    public AddTollStop setKey(java.lang.String key) {
      return (AddTollStop) super.setKey(key);
    }

    @Override
    public AddTollStop setOauthToken(java.lang.String oauthToken) {
      return (AddTollStop) super.setOauthToken(oauthToken);
    }

    @Override
    public AddTollStop setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddTollStop) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddTollStop setQuotaUser(java.lang.String quotaUser) {
      return (AddTollStop) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddTollStop setUserIp(java.lang.String userIp) {
      return (AddTollStop) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long establishmentId;

    /**

     */
    public java.lang.Long getEstablishmentId() {
      return establishmentId;
    }

    public AddTollStop setEstablishmentId(java.lang.Long establishmentId) {
      this.establishmentId = establishmentId;
      return this;
    }

    @com.google.api.client.util.Key
    private com.google.api.client.util.DateTime timestamp;

    /**

     */
    public com.google.api.client.util.DateTime getTimestamp() {
      return timestamp;
    }

    public AddTollStop setTimestamp(com.google.api.client.util.DateTime timestamp) {
      this.timestamp = timestamp;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Boolean fasTagLane;

    /**

     */
    public java.lang.Boolean getFasTagLane() {
      return fasTagLane;
    }

    public AddTollStop setFasTagLane(java.lang.Boolean fasTagLane) {
      this.fasTagLane = fasTagLane;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Float amount;

    /**

     */
    public java.lang.Float getAmount() {
      return amount;
    }

    public AddTollStop setAmount(java.lang.Float amount) {
      this.amount = amount;
      return this;
    }

    @Override
    public AddTollStop set(String parameterName, Object value) {
      return (AddTollStop) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "createGroup".
   *
   * This request holds the parameters needed by the roadMeasurementApi server.  After setting any
   * optional parameters, call the {@link CreateGroup#execute()} method to invoke the remote
   * operation.
   *
   * @param name
   * @param description
   * @return the request
   */
  public CreateGroup createGroup(java.lang.String name, java.lang.String description) throws java.io.IOException {
    CreateGroup result = new CreateGroup(name, description);
    initialize(result);
    return result;
  }

  public class CreateGroup extends RoadMeasurementApiRequest<com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.UserGroupCollection> {

    private static final String REST_PATH = "createGroup/{name}/{description}";

    /**
     * Create a request for the method "createGroup".
     *
     * This request holds the parameters needed by the the roadMeasurementApi server.  After setting
     * any optional parameters, call the {@link CreateGroup#execute()} method to invoke the remote
     * operation. <p> {@link
     * CreateGroup#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param name
     * @param description
     * @since 1.13
     */
    protected CreateGroup(java.lang.String name, java.lang.String description) {
      super(RoadMeasurementApi.this, "POST", REST_PATH, null, com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.UserGroupCollection.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
      this.description = com.google.api.client.util.Preconditions.checkNotNull(description, "Required parameter description must be specified.");
    }

    @Override
    public CreateGroup setAlt(java.lang.String alt) {
      return (CreateGroup) super.setAlt(alt);
    }

    @Override
    public CreateGroup setFields(java.lang.String fields) {
      return (CreateGroup) super.setFields(fields);
    }

    @Override
    public CreateGroup setKey(java.lang.String key) {
      return (CreateGroup) super.setKey(key);
    }

    @Override
    public CreateGroup setOauthToken(java.lang.String oauthToken) {
      return (CreateGroup) super.setOauthToken(oauthToken);
    }

    @Override
    public CreateGroup setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreateGroup) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreateGroup setQuotaUser(java.lang.String quotaUser) {
      return (CreateGroup) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreateGroup setUserIp(java.lang.String userIp) {
      return (CreateGroup) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public CreateGroup setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String description;

    /**

     */
    public java.lang.String getDescription() {
      return description;
    }

    public CreateGroup setDescription(java.lang.String description) {
      this.description = description;
      return this;
    }

    @Override
    public CreateGroup set(String parameterName, Object value) {
      return (CreateGroup) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "finishDrive".
   *
   * This request holds the parameters needed by the roadMeasurementApi server.  After setting any
   * optional parameters, call the {@link FinishDrive#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public FinishDrive finishDrive() throws java.io.IOException {
    FinishDrive result = new FinishDrive();
    initialize(result);
    return result;
  }

  public class FinishDrive extends RoadMeasurementApiRequest<com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.Drive> {

    private static final String REST_PATH = "finishDrive";

    /**
     * Create a request for the method "finishDrive".
     *
     * This request holds the parameters needed by the the roadMeasurementApi server.  After setting
     * any optional parameters, call the {@link FinishDrive#execute()} method to invoke the remote
     * operation. <p> {@link
     * FinishDrive#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected FinishDrive() {
      super(RoadMeasurementApi.this, "POST", REST_PATH, null, com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.Drive.class);
    }

    @Override
    public FinishDrive setAlt(java.lang.String alt) {
      return (FinishDrive) super.setAlt(alt);
    }

    @Override
    public FinishDrive setFields(java.lang.String fields) {
      return (FinishDrive) super.setFields(fields);
    }

    @Override
    public FinishDrive setKey(java.lang.String key) {
      return (FinishDrive) super.setKey(key);
    }

    @Override
    public FinishDrive setOauthToken(java.lang.String oauthToken) {
      return (FinishDrive) super.setOauthToken(oauthToken);
    }

    @Override
    public FinishDrive setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (FinishDrive) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public FinishDrive setQuotaUser(java.lang.String quotaUser) {
      return (FinishDrive) super.setQuotaUser(quotaUser);
    }

    @Override
    public FinishDrive setUserIp(java.lang.String userIp) {
      return (FinishDrive) super.setUserIp(userIp);
    }

    @Override
    public FinishDrive set(String parameterName, Object value) {
      return (FinishDrive) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "isRegisteredUser".
   *
   * This request holds the parameters needed by the roadMeasurementApi server.  After setting any
   * optional parameters, call the {@link IsRegisteredUser#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public IsRegisteredUser isRegisteredUser() throws java.io.IOException {
    IsRegisteredUser result = new IsRegisteredUser();
    initialize(result);
    return result;
  }

  public class IsRegisteredUser extends RoadMeasurementApiRequest<com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.MemberAndVehicles> {

    private static final String REST_PATH = "isRegisteredMember";

    /**
     * Create a request for the method "isRegisteredUser".
     *
     * This request holds the parameters needed by the the roadMeasurementApi server.  After setting
     * any optional parameters, call the {@link IsRegisteredUser#execute()} method to invoke the
     * remote operation. <p> {@link IsRegisteredUser#initialize(com.google.api.client.googleapis.servi
     * ces.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected IsRegisteredUser() {
      super(RoadMeasurementApi.this, "POST", REST_PATH, null, com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.MemberAndVehicles.class);
    }

    @Override
    public IsRegisteredUser setAlt(java.lang.String alt) {
      return (IsRegisteredUser) super.setAlt(alt);
    }

    @Override
    public IsRegisteredUser setFields(java.lang.String fields) {
      return (IsRegisteredUser) super.setFields(fields);
    }

    @Override
    public IsRegisteredUser setKey(java.lang.String key) {
      return (IsRegisteredUser) super.setKey(key);
    }

    @Override
    public IsRegisteredUser setOauthToken(java.lang.String oauthToken) {
      return (IsRegisteredUser) super.setOauthToken(oauthToken);
    }

    @Override
    public IsRegisteredUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (IsRegisteredUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public IsRegisteredUser setQuotaUser(java.lang.String quotaUser) {
      return (IsRegisteredUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public IsRegisteredUser setUserIp(java.lang.String userIp) {
      return (IsRegisteredUser) super.setUserIp(userIp);
    }

    @Override
    public IsRegisteredUser set(String parameterName, Object value) {
      return (IsRegisteredUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listGroups".
   *
   * This request holds the parameters needed by the roadMeasurementApi server.  After setting any
   * optional parameters, call the {@link ListGroups#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public ListGroups listGroups() throws java.io.IOException {
    ListGroups result = new ListGroups();
    initialize(result);
    return result;
  }

  public class ListGroups extends RoadMeasurementApiRequest<com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.UserGroupCollection> {

    private static final String REST_PATH = "usergroup";

    /**
     * Create a request for the method "listGroups".
     *
     * This request holds the parameters needed by the the roadMeasurementApi server.  After setting
     * any optional parameters, call the {@link ListGroups#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListGroups#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListGroups() {
      super(RoadMeasurementApi.this, "GET", REST_PATH, null, com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.UserGroupCollection.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListGroups setAlt(java.lang.String alt) {
      return (ListGroups) super.setAlt(alt);
    }

    @Override
    public ListGroups setFields(java.lang.String fields) {
      return (ListGroups) super.setFields(fields);
    }

    @Override
    public ListGroups setKey(java.lang.String key) {
      return (ListGroups) super.setKey(key);
    }

    @Override
    public ListGroups setOauthToken(java.lang.String oauthToken) {
      return (ListGroups) super.setOauthToken(oauthToken);
    }

    @Override
    public ListGroups setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListGroups) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListGroups setQuotaUser(java.lang.String quotaUser) {
      return (ListGroups) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListGroups setUserIp(java.lang.String userIp) {
      return (ListGroups) super.setUserIp(userIp);
    }

    @Override
    public ListGroups set(String parameterName, Object value) {
      return (ListGroups) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "register".
   *
   * This request holds the parameters needed by the roadMeasurementApi server.  After setting any
   * optional parameters, call the {@link Register#execute()} method to invoke the remote operation.
   *
   * @param name
   * @param mobile
   * @param city
   * @param state
   * @param detectedCity
   * @param detectedState
   * @param latitude
   * @param logitude
   * @param vehicleBrand
   * @param vehicleRegistration
   * @return the request
   */
  public Register register(java.lang.String name, java.lang.String mobile, java.lang.String city, java.lang.String state, java.lang.String detectedCity, java.lang.String detectedState, java.lang.Double latitude, java.lang.Double logitude, java.lang.String vehicleBrand, java.lang.String vehicleRegistration) throws java.io.IOException {
    Register result = new Register(name, mobile, city, state, detectedCity, detectedState, latitude, logitude, vehicleBrand, vehicleRegistration);
    initialize(result);
    return result;
  }

  public class Register extends RoadMeasurementApiRequest<com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.MemberAndVehicles> {

    private static final String REST_PATH = "register/{name}/{mobile}/{city}/{state}/{detectedCity}/{detectedState}/{latitude}/{logitude}/{vehicleBrand}/{vehicleRegistration}";

    /**
     * Create a request for the method "register".
     *
     * This request holds the parameters needed by the the roadMeasurementApi server.  After setting
     * any optional parameters, call the {@link Register#execute()} method to invoke the remote
     * operation. <p> {@link
     * Register#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param name
     * @param mobile
     * @param city
     * @param state
     * @param detectedCity
     * @param detectedState
     * @param latitude
     * @param logitude
     * @param vehicleBrand
     * @param vehicleRegistration
     * @since 1.13
     */
    protected Register(java.lang.String name, java.lang.String mobile, java.lang.String city, java.lang.String state, java.lang.String detectedCity, java.lang.String detectedState, java.lang.Double latitude, java.lang.Double logitude, java.lang.String vehicleBrand, java.lang.String vehicleRegistration) {
      super(RoadMeasurementApi.this, "POST", REST_PATH, null, com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.MemberAndVehicles.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
      this.mobile = com.google.api.client.util.Preconditions.checkNotNull(mobile, "Required parameter mobile must be specified.");
      this.city = com.google.api.client.util.Preconditions.checkNotNull(city, "Required parameter city must be specified.");
      this.state = com.google.api.client.util.Preconditions.checkNotNull(state, "Required parameter state must be specified.");
      this.detectedCity = com.google.api.client.util.Preconditions.checkNotNull(detectedCity, "Required parameter detectedCity must be specified.");
      this.detectedState = com.google.api.client.util.Preconditions.checkNotNull(detectedState, "Required parameter detectedState must be specified.");
      this.latitude = com.google.api.client.util.Preconditions.checkNotNull(latitude, "Required parameter latitude must be specified.");
      this.logitude = com.google.api.client.util.Preconditions.checkNotNull(logitude, "Required parameter logitude must be specified.");
      this.vehicleBrand = com.google.api.client.util.Preconditions.checkNotNull(vehicleBrand, "Required parameter vehicleBrand must be specified.");
      this.vehicleRegistration = com.google.api.client.util.Preconditions.checkNotNull(vehicleRegistration, "Required parameter vehicleRegistration must be specified.");
    }

    @Override
    public Register setAlt(java.lang.String alt) {
      return (Register) super.setAlt(alt);
    }

    @Override
    public Register setFields(java.lang.String fields) {
      return (Register) super.setFields(fields);
    }

    @Override
    public Register setKey(java.lang.String key) {
      return (Register) super.setKey(key);
    }

    @Override
    public Register setOauthToken(java.lang.String oauthToken) {
      return (Register) super.setOauthToken(oauthToken);
    }

    @Override
    public Register setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Register) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Register setQuotaUser(java.lang.String quotaUser) {
      return (Register) super.setQuotaUser(quotaUser);
    }

    @Override
    public Register setUserIp(java.lang.String userIp) {
      return (Register) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public Register setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String mobile;

    /**

     */
    public java.lang.String getMobile() {
      return mobile;
    }

    public Register setMobile(java.lang.String mobile) {
      this.mobile = mobile;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String city;

    /**

     */
    public java.lang.String getCity() {
      return city;
    }

    public Register setCity(java.lang.String city) {
      this.city = city;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String state;

    /**

     */
    public java.lang.String getState() {
      return state;
    }

    public Register setState(java.lang.String state) {
      this.state = state;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String detectedCity;

    /**

     */
    public java.lang.String getDetectedCity() {
      return detectedCity;
    }

    public Register setDetectedCity(java.lang.String detectedCity) {
      this.detectedCity = detectedCity;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String detectedState;

    /**

     */
    public java.lang.String getDetectedState() {
      return detectedState;
    }

    public Register setDetectedState(java.lang.String detectedState) {
      this.detectedState = detectedState;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double latitude;

    /**

     */
    public java.lang.Double getLatitude() {
      return latitude;
    }

    public Register setLatitude(java.lang.Double latitude) {
      this.latitude = latitude;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double logitude;

    /**

     */
    public java.lang.Double getLogitude() {
      return logitude;
    }

    public Register setLogitude(java.lang.Double logitude) {
      this.logitude = logitude;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String vehicleBrand;

    /**

     */
    public java.lang.String getVehicleBrand() {
      return vehicleBrand;
    }

    public Register setVehicleBrand(java.lang.String vehicleBrand) {
      this.vehicleBrand = vehicleBrand;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String vehicleRegistration;

    /**

     */
    public java.lang.String getVehicleRegistration() {
      return vehicleRegistration;
    }

    public Register setVehicleRegistration(java.lang.String vehicleRegistration) {
      this.vehicleRegistration = vehicleRegistration;
      return this;
    }

    @Override
    public Register set(String parameterName, Object value) {
      return (Register) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "startDrive".
   *
   * This request holds the parameters needed by the roadMeasurementApi server.  After setting any
   * optional parameters, call the {@link StartDrive#execute()} method to invoke the remote operation.
   *
   * @param timestamp
   * @param groupId
   * @param eventId
   * @param latitude
   * @param longitude
   * @return the request
   */
  public StartDrive startDrive(com.google.api.client.util.DateTime timestamp, java.lang.Long groupId, java.lang.Long eventId, java.lang.Double latitude, java.lang.Double longitude) throws java.io.IOException {
    StartDrive result = new StartDrive(timestamp, groupId, eventId, latitude, longitude);
    initialize(result);
    return result;
  }

  public class StartDrive extends RoadMeasurementApiRequest<com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.Drive> {

    private static final String REST_PATH = "startDrive/{timestamp}/{groupId}/{eventId}/{latitude}/{longitude}";

    /**
     * Create a request for the method "startDrive".
     *
     * This request holds the parameters needed by the the roadMeasurementApi server.  After setting
     * any optional parameters, call the {@link StartDrive#execute()} method to invoke the remote
     * operation. <p> {@link
     * StartDrive#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param timestamp
     * @param groupId
     * @param eventId
     * @param latitude
     * @param longitude
     * @since 1.13
     */
    protected StartDrive(com.google.api.client.util.DateTime timestamp, java.lang.Long groupId, java.lang.Long eventId, java.lang.Double latitude, java.lang.Double longitude) {
      super(RoadMeasurementApi.this, "POST", REST_PATH, null, com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.Drive.class);
      this.timestamp = com.google.api.client.util.Preconditions.checkNotNull(timestamp, "Required parameter timestamp must be specified.");
      this.groupId = com.google.api.client.util.Preconditions.checkNotNull(groupId, "Required parameter groupId must be specified.");
      this.eventId = com.google.api.client.util.Preconditions.checkNotNull(eventId, "Required parameter eventId must be specified.");
      this.latitude = com.google.api.client.util.Preconditions.checkNotNull(latitude, "Required parameter latitude must be specified.");
      this.longitude = com.google.api.client.util.Preconditions.checkNotNull(longitude, "Required parameter longitude must be specified.");
    }

    @Override
    public StartDrive setAlt(java.lang.String alt) {
      return (StartDrive) super.setAlt(alt);
    }

    @Override
    public StartDrive setFields(java.lang.String fields) {
      return (StartDrive) super.setFields(fields);
    }

    @Override
    public StartDrive setKey(java.lang.String key) {
      return (StartDrive) super.setKey(key);
    }

    @Override
    public StartDrive setOauthToken(java.lang.String oauthToken) {
      return (StartDrive) super.setOauthToken(oauthToken);
    }

    @Override
    public StartDrive setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (StartDrive) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public StartDrive setQuotaUser(java.lang.String quotaUser) {
      return (StartDrive) super.setQuotaUser(quotaUser);
    }

    @Override
    public StartDrive setUserIp(java.lang.String userIp) {
      return (StartDrive) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private com.google.api.client.util.DateTime timestamp;

    /**

     */
    public com.google.api.client.util.DateTime getTimestamp() {
      return timestamp;
    }

    public StartDrive setTimestamp(com.google.api.client.util.DateTime timestamp) {
      this.timestamp = timestamp;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long groupId;

    /**

     */
    public java.lang.Long getGroupId() {
      return groupId;
    }

    public StartDrive setGroupId(java.lang.Long groupId) {
      this.groupId = groupId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long eventId;

    /**

     */
    public java.lang.Long getEventId() {
      return eventId;
    }

    public StartDrive setEventId(java.lang.Long eventId) {
      this.eventId = eventId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double latitude;

    /**

     */
    public java.lang.Double getLatitude() {
      return latitude;
    }

    public StartDrive setLatitude(java.lang.Double latitude) {
      this.latitude = latitude;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double longitude;

    /**

     */
    public java.lang.Double getLongitude() {
      return longitude;
    }

    public StartDrive setLongitude(java.lang.Double longitude) {
      this.longitude = longitude;
      return this;
    }

    @Override
    public StartDrive set(String parameterName, Object value) {
      return (StartDrive) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateSensorData".
   *
   * This request holds the parameters needed by the roadMeasurementApi server.  After setting any
   * optional parameters, call the {@link UpdateSensorData#execute()} method to invoke the remote
   * operation.
   *
   * @param timestamp
   * @param verticalAccelerometerMean
   * @param verticalAccelerometerSD
   * @param latitude
   * @param longitude
   * @param speed
   * @param accuracy
   * @param bearing
   * @param distance
   * @return the request
   */
  public UpdateSensorData updateSensorData(com.google.api.client.util.DateTime timestamp, java.lang.Float verticalAccelerometerMean, java.lang.Float verticalAccelerometerSD, java.lang.Double latitude, java.lang.Double longitude, java.lang.Float speed, java.lang.Float accuracy, java.lang.Float bearing, java.lang.Float distance) throws java.io.IOException {
    UpdateSensorData result = new UpdateSensorData(timestamp, verticalAccelerometerMean, verticalAccelerometerSD, latitude, longitude, speed, accuracy, bearing, distance);
    initialize(result);
    return result;
  }

  public class UpdateSensorData extends RoadMeasurementApiRequest<com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.PointsOfInterest> {

    private static final String REST_PATH = "pointsofinterest/{timestamp}/{verticalAccelerometerMean}/{verticalAccelerometerSD}/{latitude}/{longitude}/{speed}/{accuracy}/{bearing}/{distance}";

    /**
     * Create a request for the method "updateSensorData".
     *
     * This request holds the parameters needed by the the roadMeasurementApi server.  After setting
     * any optional parameters, call the {@link UpdateSensorData#execute()} method to invoke the
     * remote operation. <p> {@link UpdateSensorData#initialize(com.google.api.client.googleapis.servi
     * ces.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param timestamp
     * @param verticalAccelerometerMean
     * @param verticalAccelerometerSD
     * @param latitude
     * @param longitude
     * @param speed
     * @param accuracy
     * @param bearing
     * @param distance
     * @since 1.13
     */
    protected UpdateSensorData(com.google.api.client.util.DateTime timestamp, java.lang.Float verticalAccelerometerMean, java.lang.Float verticalAccelerometerSD, java.lang.Double latitude, java.lang.Double longitude, java.lang.Float speed, java.lang.Float accuracy, java.lang.Float bearing, java.lang.Float distance) {
      super(RoadMeasurementApi.this, "PUT", REST_PATH, null, com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.PointsOfInterest.class);
      this.timestamp = com.google.api.client.util.Preconditions.checkNotNull(timestamp, "Required parameter timestamp must be specified.");
      this.verticalAccelerometerMean = com.google.api.client.util.Preconditions.checkNotNull(verticalAccelerometerMean, "Required parameter verticalAccelerometerMean must be specified.");
      this.verticalAccelerometerSD = com.google.api.client.util.Preconditions.checkNotNull(verticalAccelerometerSD, "Required parameter verticalAccelerometerSD must be specified.");
      this.latitude = com.google.api.client.util.Preconditions.checkNotNull(latitude, "Required parameter latitude must be specified.");
      this.longitude = com.google.api.client.util.Preconditions.checkNotNull(longitude, "Required parameter longitude must be specified.");
      this.speed = com.google.api.client.util.Preconditions.checkNotNull(speed, "Required parameter speed must be specified.");
      this.accuracy = com.google.api.client.util.Preconditions.checkNotNull(accuracy, "Required parameter accuracy must be specified.");
      this.bearing = com.google.api.client.util.Preconditions.checkNotNull(bearing, "Required parameter bearing must be specified.");
      this.distance = com.google.api.client.util.Preconditions.checkNotNull(distance, "Required parameter distance must be specified.");
    }

    @Override
    public UpdateSensorData setAlt(java.lang.String alt) {
      return (UpdateSensorData) super.setAlt(alt);
    }

    @Override
    public UpdateSensorData setFields(java.lang.String fields) {
      return (UpdateSensorData) super.setFields(fields);
    }

    @Override
    public UpdateSensorData setKey(java.lang.String key) {
      return (UpdateSensorData) super.setKey(key);
    }

    @Override
    public UpdateSensorData setOauthToken(java.lang.String oauthToken) {
      return (UpdateSensorData) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateSensorData setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateSensorData) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateSensorData setQuotaUser(java.lang.String quotaUser) {
      return (UpdateSensorData) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateSensorData setUserIp(java.lang.String userIp) {
      return (UpdateSensorData) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private com.google.api.client.util.DateTime timestamp;

    /**

     */
    public com.google.api.client.util.DateTime getTimestamp() {
      return timestamp;
    }

    public UpdateSensorData setTimestamp(com.google.api.client.util.DateTime timestamp) {
      this.timestamp = timestamp;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Float verticalAccelerometerMean;

    /**

     */
    public java.lang.Float getVerticalAccelerometerMean() {
      return verticalAccelerometerMean;
    }

    public UpdateSensorData setVerticalAccelerometerMean(java.lang.Float verticalAccelerometerMean) {
      this.verticalAccelerometerMean = verticalAccelerometerMean;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Float verticalAccelerometerSD;

    /**

     */
    public java.lang.Float getVerticalAccelerometerSD() {
      return verticalAccelerometerSD;
    }

    public UpdateSensorData setVerticalAccelerometerSD(java.lang.Float verticalAccelerometerSD) {
      this.verticalAccelerometerSD = verticalAccelerometerSD;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double latitude;

    /**

     */
    public java.lang.Double getLatitude() {
      return latitude;
    }

    public UpdateSensorData setLatitude(java.lang.Double latitude) {
      this.latitude = latitude;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double longitude;

    /**

     */
    public java.lang.Double getLongitude() {
      return longitude;
    }

    public UpdateSensorData setLongitude(java.lang.Double longitude) {
      this.longitude = longitude;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Float speed;

    /**

     */
    public java.lang.Float getSpeed() {
      return speed;
    }

    public UpdateSensorData setSpeed(java.lang.Float speed) {
      this.speed = speed;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Float accuracy;

    /**

     */
    public java.lang.Float getAccuracy() {
      return accuracy;
    }

    public UpdateSensorData setAccuracy(java.lang.Float accuracy) {
      this.accuracy = accuracy;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Float bearing;

    /**

     */
    public java.lang.Float getBearing() {
      return bearing;
    }

    public UpdateSensorData setBearing(java.lang.Float bearing) {
      this.bearing = bearing;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Float distance;

    /**

     */
    public java.lang.Float getDistance() {
      return distance;
    }

    public UpdateSensorData setDistance(java.lang.Float distance) {
      this.distance = distance;
      return this;
    }

    @Override
    public UpdateSensorData set(String parameterName, Object value) {
      return (UpdateSensorData) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link RoadMeasurementApi}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link RoadMeasurementApi}. */
    @Override
    public RoadMeasurementApi build() {
      return new RoadMeasurementApi(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link RoadMeasurementApiRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setRoadMeasurementApiRequestInitializer(
        RoadMeasurementApiRequestInitializer roadmeasurementapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(roadmeasurementapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}

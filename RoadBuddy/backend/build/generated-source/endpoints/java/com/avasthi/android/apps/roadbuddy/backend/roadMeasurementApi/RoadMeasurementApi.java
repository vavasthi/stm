/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2015-11-16 19:10:01 UTC)
 * on 2015-12-06 at 12:23:44 UTC 
 * Modify at your own risk.
 */

package com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi;

/**
 * Service definition for RoadMeasurementApi (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link RoadMeasurementApiRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class RoadMeasurementApi extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.21.0 of the roadMeasurementApi library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://roadCompanion.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "roadMeasurementApi/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public RoadMeasurementApi(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  RoadMeasurementApi(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the RoadMeasurementBeanEndpoint collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code RoadMeasurementApi roadMeasurementApi = new RoadMeasurementApi(...);}
   *   {@code RoadMeasurementApi.RoadMeasurementBeanEndpoint.List request = roadMeasurementApi.roadMeasurementBeanEndpoint().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public RoadMeasurementBeanEndpoint roadMeasurementBeanEndpoint() {
    return new RoadMeasurementBeanEndpoint();
  }

  /**
   * The "roadMeasurementBeanEndpoint" collection of methods.
   */
  public class RoadMeasurementBeanEndpoint {

    /**
     * Create a request for the method "roadMeasurementBeanEndpoint.getGroupsForUser".
     *
     * This request holds the parameters needed by the roadMeasurementApi server.  After setting any
     * optional parameters, call the {@link GetGroupsForUser#execute()} method to invoke the remote
     * operation.
     *
     * @return the request
     */
    public GetGroupsForUser getGroupsForUser() throws java.io.IOException {
      GetGroupsForUser result = new GetGroupsForUser();
      initialize(result);
      return result;
    }

    public class GetGroupsForUser extends RoadMeasurementApiRequest<com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.UserGroupCollection> {

      private static final String REST_PATH = "usergroupcollection";

      /**
       * Create a request for the method "roadMeasurementBeanEndpoint.getGroupsForUser".
       *
       * This request holds the parameters needed by the the roadMeasurementApi server.  After setting
       * any optional parameters, call the {@link GetGroupsForUser#execute()} method to invoke the
       * remote operation. <p> {@link GetGroupsForUser#initialize(com.google.api.client.googleapis.servi
       * ces.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected GetGroupsForUser() {
        super(RoadMeasurementApi.this, "GET", REST_PATH, null, com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.UserGroupCollection.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetGroupsForUser setAlt(java.lang.String alt) {
        return (GetGroupsForUser) super.setAlt(alt);
      }

      @Override
      public GetGroupsForUser setFields(java.lang.String fields) {
        return (GetGroupsForUser) super.setFields(fields);
      }

      @Override
      public GetGroupsForUser setKey(java.lang.String key) {
        return (GetGroupsForUser) super.setKey(key);
      }

      @Override
      public GetGroupsForUser setOauthToken(java.lang.String oauthToken) {
        return (GetGroupsForUser) super.setOauthToken(oauthToken);
      }

      @Override
      public GetGroupsForUser setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetGroupsForUser) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetGroupsForUser setQuotaUser(java.lang.String quotaUser) {
        return (GetGroupsForUser) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetGroupsForUser setUserIp(java.lang.String userIp) {
        return (GetGroupsForUser) super.setUserIp(userIp);
      }

      @Override
      public GetGroupsForUser set(String parameterName, Object value) {
        return (GetGroupsForUser) super.set(parameterName, value);
      }
    }

  }

  /**
   * Create a request for the method "createGroup".
   *
   * This request holds the parameters needed by the roadMeasurementApi server.  After setting any
   * optional parameters, call the {@link CreateGroup#execute()} method to invoke the remote
   * operation.
   *
   * @param name
   * @param description
   * @return the request
   */
  public CreateGroup createGroup(java.lang.String name, java.lang.String description) throws java.io.IOException {
    CreateGroup result = new CreateGroup(name, description);
    initialize(result);
    return result;
  }

  public class CreateGroup extends RoadMeasurementApiRequest<com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.UserGroupCollection> {

    private static final String REST_PATH = "createGroup/{name}/{description}";

    /**
     * Create a request for the method "createGroup".
     *
     * This request holds the parameters needed by the the roadMeasurementApi server.  After setting
     * any optional parameters, call the {@link CreateGroup#execute()} method to invoke the remote
     * operation. <p> {@link
     * CreateGroup#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param name
     * @param description
     * @since 1.13
     */
    protected CreateGroup(java.lang.String name, java.lang.String description) {
      super(RoadMeasurementApi.this, "POST", REST_PATH, null, com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.UserGroupCollection.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
      this.description = com.google.api.client.util.Preconditions.checkNotNull(description, "Required parameter description must be specified.");
    }

    @Override
    public CreateGroup setAlt(java.lang.String alt) {
      return (CreateGroup) super.setAlt(alt);
    }

    @Override
    public CreateGroup setFields(java.lang.String fields) {
      return (CreateGroup) super.setFields(fields);
    }

    @Override
    public CreateGroup setKey(java.lang.String key) {
      return (CreateGroup) super.setKey(key);
    }

    @Override
    public CreateGroup setOauthToken(java.lang.String oauthToken) {
      return (CreateGroup) super.setOauthToken(oauthToken);
    }

    @Override
    public CreateGroup setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreateGroup) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreateGroup setQuotaUser(java.lang.String quotaUser) {
      return (CreateGroup) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreateGroup setUserIp(java.lang.String userIp) {
      return (CreateGroup) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public CreateGroup setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String description;

    /**

     */
    public java.lang.String getDescription() {
      return description;
    }

    public CreateGroup setDescription(java.lang.String description) {
      this.description = description;
      return this;
    }

    @Override
    public CreateGroup set(String parameterName, Object value) {
      return (CreateGroup) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "isRegisteredUser".
   *
   * This request holds the parameters needed by the roadMeasurementApi server.  After setting any
   * optional parameters, call the {@link IsRegisteredUser#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public IsRegisteredUser isRegisteredUser() throws java.io.IOException {
    IsRegisteredUser result = new IsRegisteredUser();
    initialize(result);
    return result;
  }

  public class IsRegisteredUser extends RoadMeasurementApiRequest<com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.Member> {

    private static final String REST_PATH = "isRegisteredMember";

    /**
     * Create a request for the method "isRegisteredUser".
     *
     * This request holds the parameters needed by the the roadMeasurementApi server.  After setting
     * any optional parameters, call the {@link IsRegisteredUser#execute()} method to invoke the
     * remote operation. <p> {@link IsRegisteredUser#initialize(com.google.api.client.googleapis.servi
     * ces.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected IsRegisteredUser() {
      super(RoadMeasurementApi.this, "POST", REST_PATH, null, com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.Member.class);
    }

    @Override
    public IsRegisteredUser setAlt(java.lang.String alt) {
      return (IsRegisteredUser) super.setAlt(alt);
    }

    @Override
    public IsRegisteredUser setFields(java.lang.String fields) {
      return (IsRegisteredUser) super.setFields(fields);
    }

    @Override
    public IsRegisteredUser setKey(java.lang.String key) {
      return (IsRegisteredUser) super.setKey(key);
    }

    @Override
    public IsRegisteredUser setOauthToken(java.lang.String oauthToken) {
      return (IsRegisteredUser) super.setOauthToken(oauthToken);
    }

    @Override
    public IsRegisteredUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (IsRegisteredUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public IsRegisteredUser setQuotaUser(java.lang.String quotaUser) {
      return (IsRegisteredUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public IsRegisteredUser setUserIp(java.lang.String userIp) {
      return (IsRegisteredUser) super.setUserIp(userIp);
    }

    @Override
    public IsRegisteredUser set(String parameterName, Object value) {
      return (IsRegisteredUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listGroups".
   *
   * This request holds the parameters needed by the roadMeasurementApi server.  After setting any
   * optional parameters, call the {@link ListGroups#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public ListGroups listGroups() throws java.io.IOException {
    ListGroups result = new ListGroups();
    initialize(result);
    return result;
  }

  public class ListGroups extends RoadMeasurementApiRequest<com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.UserGroupCollection> {

    private static final String REST_PATH = "usergroup";

    /**
     * Create a request for the method "listGroups".
     *
     * This request holds the parameters needed by the the roadMeasurementApi server.  After setting
     * any optional parameters, call the {@link ListGroups#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListGroups#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListGroups() {
      super(RoadMeasurementApi.this, "GET", REST_PATH, null, com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.UserGroupCollection.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListGroups setAlt(java.lang.String alt) {
      return (ListGroups) super.setAlt(alt);
    }

    @Override
    public ListGroups setFields(java.lang.String fields) {
      return (ListGroups) super.setFields(fields);
    }

    @Override
    public ListGroups setKey(java.lang.String key) {
      return (ListGroups) super.setKey(key);
    }

    @Override
    public ListGroups setOauthToken(java.lang.String oauthToken) {
      return (ListGroups) super.setOauthToken(oauthToken);
    }

    @Override
    public ListGroups setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListGroups) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListGroups setQuotaUser(java.lang.String quotaUser) {
      return (ListGroups) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListGroups setUserIp(java.lang.String userIp) {
      return (ListGroups) super.setUserIp(userIp);
    }

    @Override
    public ListGroups set(String parameterName, Object value) {
      return (ListGroups) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "register".
   *
   * This request holds the parameters needed by the roadMeasurementApi server.  After setting any
   * optional parameters, call the {@link Register#execute()} method to invoke the remote operation.
   *
   * @param name
   * @param mobile
   * @param city
   * @param state
   * @param detectedCity
   * @param detectedState
   * @param latitude
   * @param logitude
   * @return the request
   */
  public Register register(java.lang.String name, java.lang.String mobile, java.lang.String city, java.lang.String state, java.lang.String detectedCity, java.lang.String detectedState, java.lang.Double latitude, java.lang.Double logitude) throws java.io.IOException {
    Register result = new Register(name, mobile, city, state, detectedCity, detectedState, latitude, logitude);
    initialize(result);
    return result;
  }

  public class Register extends RoadMeasurementApiRequest<com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.Member> {

    private static final String REST_PATH = "register/{name}/{mobile}/{city}/{state}/{detectedCity}/{detectedState}/{latitude}/{logitude}";

    /**
     * Create a request for the method "register".
     *
     * This request holds the parameters needed by the the roadMeasurementApi server.  After setting
     * any optional parameters, call the {@link Register#execute()} method to invoke the remote
     * operation. <p> {@link
     * Register#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param name
     * @param mobile
     * @param city
     * @param state
     * @param detectedCity
     * @param detectedState
     * @param latitude
     * @param logitude
     * @since 1.13
     */
    protected Register(java.lang.String name, java.lang.String mobile, java.lang.String city, java.lang.String state, java.lang.String detectedCity, java.lang.String detectedState, java.lang.Double latitude, java.lang.Double logitude) {
      super(RoadMeasurementApi.this, "POST", REST_PATH, null, com.avasthi.android.apps.roadbuddy.backend.roadMeasurementApi.model.Member.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
      this.mobile = com.google.api.client.util.Preconditions.checkNotNull(mobile, "Required parameter mobile must be specified.");
      this.city = com.google.api.client.util.Preconditions.checkNotNull(city, "Required parameter city must be specified.");
      this.state = com.google.api.client.util.Preconditions.checkNotNull(state, "Required parameter state must be specified.");
      this.detectedCity = com.google.api.client.util.Preconditions.checkNotNull(detectedCity, "Required parameter detectedCity must be specified.");
      this.detectedState = com.google.api.client.util.Preconditions.checkNotNull(detectedState, "Required parameter detectedState must be specified.");
      this.latitude = com.google.api.client.util.Preconditions.checkNotNull(latitude, "Required parameter latitude must be specified.");
      this.logitude = com.google.api.client.util.Preconditions.checkNotNull(logitude, "Required parameter logitude must be specified.");
    }

    @Override
    public Register setAlt(java.lang.String alt) {
      return (Register) super.setAlt(alt);
    }

    @Override
    public Register setFields(java.lang.String fields) {
      return (Register) super.setFields(fields);
    }

    @Override
    public Register setKey(java.lang.String key) {
      return (Register) super.setKey(key);
    }

    @Override
    public Register setOauthToken(java.lang.String oauthToken) {
      return (Register) super.setOauthToken(oauthToken);
    }

    @Override
    public Register setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Register) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Register setQuotaUser(java.lang.String quotaUser) {
      return (Register) super.setQuotaUser(quotaUser);
    }

    @Override
    public Register setUserIp(java.lang.String userIp) {
      return (Register) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public Register setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String mobile;

    /**

     */
    public java.lang.String getMobile() {
      return mobile;
    }

    public Register setMobile(java.lang.String mobile) {
      this.mobile = mobile;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String city;

    /**

     */
    public java.lang.String getCity() {
      return city;
    }

    public Register setCity(java.lang.String city) {
      this.city = city;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String state;

    /**

     */
    public java.lang.String getState() {
      return state;
    }

    public Register setState(java.lang.String state) {
      this.state = state;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String detectedCity;

    /**

     */
    public java.lang.String getDetectedCity() {
      return detectedCity;
    }

    public Register setDetectedCity(java.lang.String detectedCity) {
      this.detectedCity = detectedCity;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String detectedState;

    /**

     */
    public java.lang.String getDetectedState() {
      return detectedState;
    }

    public Register setDetectedState(java.lang.String detectedState) {
      this.detectedState = detectedState;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double latitude;

    /**

     */
    public java.lang.Double getLatitude() {
      return latitude;
    }

    public Register setLatitude(java.lang.Double latitude) {
      this.latitude = latitude;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double logitude;

    /**

     */
    public java.lang.Double getLogitude() {
      return logitude;
    }

    public Register setLogitude(java.lang.Double logitude) {
      this.logitude = logitude;
      return this;
    }

    @Override
    public Register set(String parameterName, Object value) {
      return (Register) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link RoadMeasurementApi}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link RoadMeasurementApi}. */
    @Override
    public RoadMeasurementApi build() {
      return new RoadMeasurementApi(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link RoadMeasurementApiRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setRoadMeasurementApiRequestInitializer(
        RoadMeasurementApiRequestInitializer roadmeasurementapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(roadmeasurementapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
